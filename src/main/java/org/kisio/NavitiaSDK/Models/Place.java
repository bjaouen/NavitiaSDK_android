/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results     
 *
 * OpenAPI spec version: v2.38.0
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.kisio.NavitiaSDK.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.kisio.NavitiaSDK.models.Address;
import org.kisio.NavitiaSDK.models.Admin;
import org.kisio.NavitiaSDK.models.Poi;
import org.kisio.NavitiaSDK.models.StopArea;
import org.kisio.NavitiaSDK.models.StopPoint;

/**
 * Place
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.NavitiaSDKJavaClientCodegen", date = "2017-09-11T17:13:37.346+02:00")
public class Place {
  @SerializedName("embedded_type")
  private String embeddedType = null;

  @SerializedName("stop_point")
  private StopPoint stopPoint = null;

  @SerializedName("administrative_region")
  private Admin administrativeRegion = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("address")
  private Address address = null;

  @SerializedName("poi")
  private Poi poi = null;

  @SerializedName("quality")
  private Integer quality = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("stop_area")
  private StopArea stopArea = null;

  public Place embeddedType(String embeddedType) {
    this.embeddedType = embeddedType;
    return this;
  }

   /**
   * Get embeddedType
   * @return embeddedType
  **/
  @ApiModelProperty(value = "")
  public String getEmbeddedType() {
    return embeddedType;
  }

  public void setEmbeddedType(String embeddedType) {
    this.embeddedType = embeddedType;
  }

  public Place stopPoint(StopPoint stopPoint) {
    this.stopPoint = stopPoint;
    return this;
  }

   /**
   * Get stopPoint
   * @return stopPoint
  **/
  @ApiModelProperty(value = "")
  public StopPoint getStopPoint() {
    return stopPoint;
  }

  public void setStopPoint(StopPoint stopPoint) {
    this.stopPoint = stopPoint;
  }

  public Place administrativeRegion(Admin administrativeRegion) {
    this.administrativeRegion = administrativeRegion;
    return this;
  }

   /**
   * Get administrativeRegion
   * @return administrativeRegion
  **/
  @ApiModelProperty(value = "")
  public Admin getAdministrativeRegion() {
    return administrativeRegion;
  }

  public void setAdministrativeRegion(Admin administrativeRegion) {
    this.administrativeRegion = administrativeRegion;
  }

  public Place name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the object
   * @return name
  **/
  @ApiModelProperty(value = "Name of the object")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Place address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public Place poi(Poi poi) {
    this.poi = poi;
    return this;
  }

   /**
   * Get poi
   * @return poi
  **/
  @ApiModelProperty(value = "")
  public Poi getPoi() {
    return poi;
  }

  public void setPoi(Poi poi) {
    this.poi = poi;
  }

  public Place quality(Integer quality) {
    this.quality = quality;
    return this;
  }

   /**
   * Get quality
   * @return quality
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getQuality() {
    return quality;
  }

  public void setQuality(Integer quality) {
    this.quality = quality;
  }

  public Place id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the object
   * @return id
  **/
  @ApiModelProperty(value = "Identifier of the object")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Place stopArea(StopArea stopArea) {
    this.stopArea = stopArea;
    return this;
  }

   /**
   * Get stopArea
   * @return stopArea
  **/
  @ApiModelProperty(value = "")
  public StopArea getStopArea() {
    return stopArea;
  }

  public void setStopArea(StopArea stopArea) {
    this.stopArea = stopArea;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Place place = (Place) o;
    return Objects.equals(this.embeddedType, place.embeddedType) &&
        Objects.equals(this.stopPoint, place.stopPoint) &&
        Objects.equals(this.administrativeRegion, place.administrativeRegion) &&
        Objects.equals(this.name, place.name) &&
        Objects.equals(this.address, place.address) &&
        Objects.equals(this.poi, place.poi) &&
        Objects.equals(this.quality, place.quality) &&
        Objects.equals(this.id, place.id) &&
        Objects.equals(this.stopArea, place.stopArea);
  }

  @Override
  public int hashCode() {
    return Objects.hash(embeddedType, stopPoint, administrativeRegion, name, address, poi, quality, id, stopArea);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Place {\n");
    
    sb.append("    embeddedType: ").append(toIndentedString(embeddedType)).append("\n");
    sb.append("    stopPoint: ").append(toIndentedString(stopPoint)).append("\n");
    sb.append("    administrativeRegion: ").append(toIndentedString(administrativeRegion)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    poi: ").append(toIndentedString(poi)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    stopArea: ").append(toIndentedString(stopArea)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

