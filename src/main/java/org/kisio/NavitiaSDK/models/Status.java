/*
 * navitia
 *      navitia.io is the open API for building cool stuff with mobility data. It provides the following services      * journeys computation     * line schedules     * next departures     * exploration of public transport data / search places     * and sexy things such as isochrones      navitia is a HATEOAS API that returns JSON formated results     
 *
 * OpenAPI spec version: v2.43.0-34-g30b0bcf
 * Contact: navitia@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.kisio.NavitiaSDK.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.kisio.NavitiaSDK.models.Autocomplete;
import org.kisio.NavitiaSDK.models.Parameters;
import org.kisio.NavitiaSDK.models.StreetNetwork;
import org.kisio.NavitiaSDK.models.TravelerProfiles;
import android.os.Parcelable;
import android.os.Parcel;

/**
 * Status
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.NavitiaSDKJavaClientCodegen", date = "2017-11-03T11:50:27.015+01:00")
public class Status implements Parcelable {
  @SerializedName("status")
  private String status = null;

  @SerializedName("dataset_created_at")
  private String datasetCreatedAt = null;

  @SerializedName("traveler_profiles")
  private List<TravelerProfiles> travelerProfiles = new ArrayList<TravelerProfiles>();

  @SerializedName("is_realtime_loaded")
  private Boolean isRealtimeLoaded = null;

  @SerializedName("parameters")
  private Parameters parameters = null;

  @SerializedName("kraken_version")
  private String krakenVersion = null;

  @SerializedName("start_production_date")
  private String startProductionDate = null;

  @SerializedName("is_open_service")
  private Boolean isOpenService = null;

  @SerializedName("nb_threads")
  private Integer nbThreads = null;

  @SerializedName("is_connected_to_rabbitmq")
  private Boolean isConnectedToRabbitmq = null;

  @SerializedName("autocomplete")
  private Autocomplete autocomplete = null;

  @SerializedName("data_version")
  private Integer dataVersion = null;

  @SerializedName("last_load_at")
  private String lastLoadAt = null;

  @SerializedName("end_production_date")
  private String endProductionDate = null;

  @SerializedName("realtime_proxies")
  private List<String> realtimeProxies = new ArrayList<String>();

  @SerializedName("publication_date")
  private String publicationDate = null;

  @SerializedName("realtime_contributors")
  private List<String> realtimeContributors = new ArrayList<String>();

  @SerializedName("street_networks")
  private List<StreetNetwork> streetNetworks = new ArrayList<StreetNetwork>();

  @SerializedName("last_load_status")
  private Boolean lastLoadStatus = null;

  @SerializedName("is_open_data")
  private Boolean isOpenData = null;

  @SerializedName("last_rt_data_loaded")
  private String lastRtDataLoaded = null;

  public Status status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Status datasetCreatedAt(String datasetCreatedAt) {
    this.datasetCreatedAt = datasetCreatedAt;
    return this;
  }

   /**
   * Get datasetCreatedAt
   * @return datasetCreatedAt
  **/
  @ApiModelProperty(value = "")
  public String getDatasetCreatedAt() {
    return datasetCreatedAt;
  }

  public void setDatasetCreatedAt(String datasetCreatedAt) {
    this.datasetCreatedAt = datasetCreatedAt;
  }

  public Status travelerProfiles(List<TravelerProfiles> travelerProfiles) {
    this.travelerProfiles = travelerProfiles;
    return this;
  }

  public Status addTravelerProfilesItem(TravelerProfiles travelerProfilesItem) {
    this.travelerProfiles.add(travelerProfilesItem);
    return this;
  }

   /**
   * Get travelerProfiles
   * @return travelerProfiles
  **/
  @ApiModelProperty(required = true, value = "")
  public List<TravelerProfiles> getTravelerProfiles() {
    return travelerProfiles;
  }

  public void setTravelerProfiles(List<TravelerProfiles> travelerProfiles) {
    this.travelerProfiles = travelerProfiles;
  }

  public Status isRealtimeLoaded(Boolean isRealtimeLoaded) {
    this.isRealtimeLoaded = isRealtimeLoaded;
    return this;
  }

   /**
   * Get isRealtimeLoaded
   * @return isRealtimeLoaded
  **/
  @ApiModelProperty(value = "")
  public Boolean getIsRealtimeLoaded() {
    return isRealtimeLoaded;
  }

  public void setIsRealtimeLoaded(Boolean isRealtimeLoaded) {
    this.isRealtimeLoaded = isRealtimeLoaded;
  }

  public Status parameters(Parameters parameters) {
    this.parameters = parameters;
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @ApiModelProperty(required = true, value = "")
  public Parameters getParameters() {
    return parameters;
  }

  public void setParameters(Parameters parameters) {
    this.parameters = parameters;
  }

  public Status krakenVersion(String krakenVersion) {
    this.krakenVersion = krakenVersion;
    return this;
  }

   /**
   * Get krakenVersion
   * @return krakenVersion
  **/
  @ApiModelProperty(value = "")
  public String getKrakenVersion() {
    return krakenVersion;
  }

  public void setKrakenVersion(String krakenVersion) {
    this.krakenVersion = krakenVersion;
  }

  public Status startProductionDate(String startProductionDate) {
    this.startProductionDate = startProductionDate;
    return this;
  }

   /**
   * Get startProductionDate
   * @return startProductionDate
  **/
  @ApiModelProperty(value = "")
  public String getStartProductionDate() {
    return startProductionDate;
  }

  public void setStartProductionDate(String startProductionDate) {
    this.startProductionDate = startProductionDate;
  }

  public Status isOpenService(Boolean isOpenService) {
    this.isOpenService = isOpenService;
    return this;
  }

   /**
   * Get isOpenService
   * @return isOpenService
  **/
  @ApiModelProperty(value = "")
  public Boolean getIsOpenService() {
    return isOpenService;
  }

  public void setIsOpenService(Boolean isOpenService) {
    this.isOpenService = isOpenService;
  }

  public Status nbThreads(Integer nbThreads) {
    this.nbThreads = nbThreads;
    return this;
  }

   /**
   * Get nbThreads
   * @return nbThreads
  **/
  @ApiModelProperty(value = "")
  public Integer getNbThreads() {
    return nbThreads;
  }

  public void setNbThreads(Integer nbThreads) {
    this.nbThreads = nbThreads;
  }

  public Status isConnectedToRabbitmq(Boolean isConnectedToRabbitmq) {
    this.isConnectedToRabbitmq = isConnectedToRabbitmq;
    return this;
  }

   /**
   * Get isConnectedToRabbitmq
   * @return isConnectedToRabbitmq
  **/
  @ApiModelProperty(value = "")
  public Boolean getIsConnectedToRabbitmq() {
    return isConnectedToRabbitmq;
  }

  public void setIsConnectedToRabbitmq(Boolean isConnectedToRabbitmq) {
    this.isConnectedToRabbitmq = isConnectedToRabbitmq;
  }

  public Status autocomplete(Autocomplete autocomplete) {
    this.autocomplete = autocomplete;
    return this;
  }

   /**
   * Get autocomplete
   * @return autocomplete
  **/
  @ApiModelProperty(required = true, value = "")
  public Autocomplete getAutocomplete() {
    return autocomplete;
  }

  public void setAutocomplete(Autocomplete autocomplete) {
    this.autocomplete = autocomplete;
  }

  public Status dataVersion(Integer dataVersion) {
    this.dataVersion = dataVersion;
    return this;
  }

   /**
   * Get dataVersion
   * @return dataVersion
  **/
  @ApiModelProperty(value = "")
  public Integer getDataVersion() {
    return dataVersion;
  }

  public void setDataVersion(Integer dataVersion) {
    this.dataVersion = dataVersion;
  }

  public Status lastLoadAt(String lastLoadAt) {
    this.lastLoadAt = lastLoadAt;
    return this;
  }

   /**
   * Get lastLoadAt
   * @return lastLoadAt
  **/
  @ApiModelProperty(value = "")
  public String getLastLoadAt() {
    return lastLoadAt;
  }

  public void setLastLoadAt(String lastLoadAt) {
    this.lastLoadAt = lastLoadAt;
  }

  public Status endProductionDate(String endProductionDate) {
    this.endProductionDate = endProductionDate;
    return this;
  }

   /**
   * Get endProductionDate
   * @return endProductionDate
  **/
  @ApiModelProperty(value = "")
  public String getEndProductionDate() {
    return endProductionDate;
  }

  public void setEndProductionDate(String endProductionDate) {
    this.endProductionDate = endProductionDate;
  }

  public Status realtimeProxies(List<String> realtimeProxies) {
    this.realtimeProxies = realtimeProxies;
    return this;
  }

  public Status addRealtimeProxiesItem(String realtimeProxiesItem) {
    this.realtimeProxies.add(realtimeProxiesItem);
    return this;
  }

   /**
   * Get realtimeProxies
   * @return realtimeProxies
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getRealtimeProxies() {
    return realtimeProxies;
  }

  public void setRealtimeProxies(List<String> realtimeProxies) {
    this.realtimeProxies = realtimeProxies;
  }

  public Status publicationDate(String publicationDate) {
    this.publicationDate = publicationDate;
    return this;
  }

   /**
   * Get publicationDate
   * @return publicationDate
  **/
  @ApiModelProperty(value = "")
  public String getPublicationDate() {
    return publicationDate;
  }

  public void setPublicationDate(String publicationDate) {
    this.publicationDate = publicationDate;
  }

  public Status realtimeContributors(List<String> realtimeContributors) {
    this.realtimeContributors = realtimeContributors;
    return this;
  }

  public Status addRealtimeContributorsItem(String realtimeContributorsItem) {
    this.realtimeContributors.add(realtimeContributorsItem);
    return this;
  }

   /**
   * Get realtimeContributors
   * @return realtimeContributors
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getRealtimeContributors() {
    return realtimeContributors;
  }

  public void setRealtimeContributors(List<String> realtimeContributors) {
    this.realtimeContributors = realtimeContributors;
  }

  public Status streetNetworks(List<StreetNetwork> streetNetworks) {
    this.streetNetworks = streetNetworks;
    return this;
  }

  public Status addStreetNetworksItem(StreetNetwork streetNetworksItem) {
    this.streetNetworks.add(streetNetworksItem);
    return this;
  }

   /**
   * Get streetNetworks
   * @return streetNetworks
  **/
  @ApiModelProperty(required = true, value = "")
  public List<StreetNetwork> getStreetNetworks() {
    return streetNetworks;
  }

  public void setStreetNetworks(List<StreetNetwork> streetNetworks) {
    this.streetNetworks = streetNetworks;
  }

  public Status lastLoadStatus(Boolean lastLoadStatus) {
    this.lastLoadStatus = lastLoadStatus;
    return this;
  }

   /**
   * Get lastLoadStatus
   * @return lastLoadStatus
  **/
  @ApiModelProperty(value = "")
  public Boolean getLastLoadStatus() {
    return lastLoadStatus;
  }

  public void setLastLoadStatus(Boolean lastLoadStatus) {
    this.lastLoadStatus = lastLoadStatus;
  }

  public Status isOpenData(Boolean isOpenData) {
    this.isOpenData = isOpenData;
    return this;
  }

   /**
   * Get isOpenData
   * @return isOpenData
  **/
  @ApiModelProperty(value = "")
  public Boolean getIsOpenData() {
    return isOpenData;
  }

  public void setIsOpenData(Boolean isOpenData) {
    this.isOpenData = isOpenData;
  }

  public Status lastRtDataLoaded(String lastRtDataLoaded) {
    this.lastRtDataLoaded = lastRtDataLoaded;
    return this;
  }

   /**
   * Get lastRtDataLoaded
   * @return lastRtDataLoaded
  **/
  @ApiModelProperty(value = "")
  public String getLastRtDataLoaded() {
    return lastRtDataLoaded;
  }

  public void setLastRtDataLoaded(String lastRtDataLoaded) {
    this.lastRtDataLoaded = lastRtDataLoaded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Status status = (Status) o;
    return Objects.equals(this.status, status.status) &&
        Objects.equals(this.datasetCreatedAt, status.datasetCreatedAt) &&
        Objects.equals(this.travelerProfiles, status.travelerProfiles) &&
        Objects.equals(this.isRealtimeLoaded, status.isRealtimeLoaded) &&
        Objects.equals(this.parameters, status.parameters) &&
        Objects.equals(this.krakenVersion, status.krakenVersion) &&
        Objects.equals(this.startProductionDate, status.startProductionDate) &&
        Objects.equals(this.isOpenService, status.isOpenService) &&
        Objects.equals(this.nbThreads, status.nbThreads) &&
        Objects.equals(this.isConnectedToRabbitmq, status.isConnectedToRabbitmq) &&
        Objects.equals(this.autocomplete, status.autocomplete) &&
        Objects.equals(this.dataVersion, status.dataVersion) &&
        Objects.equals(this.lastLoadAt, status.lastLoadAt) &&
        Objects.equals(this.endProductionDate, status.endProductionDate) &&
        Objects.equals(this.realtimeProxies, status.realtimeProxies) &&
        Objects.equals(this.publicationDate, status.publicationDate) &&
        Objects.equals(this.realtimeContributors, status.realtimeContributors) &&
        Objects.equals(this.streetNetworks, status.streetNetworks) &&
        Objects.equals(this.lastLoadStatus, status.lastLoadStatus) &&
        Objects.equals(this.isOpenData, status.isOpenData) &&
        Objects.equals(this.lastRtDataLoaded, status.lastRtDataLoaded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, datasetCreatedAt, travelerProfiles, isRealtimeLoaded, parameters, krakenVersion, startProductionDate, isOpenService, nbThreads, isConnectedToRabbitmq, autocomplete, dataVersion, lastLoadAt, endProductionDate, realtimeProxies, publicationDate, realtimeContributors, streetNetworks, lastLoadStatus, isOpenData, lastRtDataLoaded);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Status {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    datasetCreatedAt: ").append(toIndentedString(datasetCreatedAt)).append("\n");
    sb.append("    travelerProfiles: ").append(toIndentedString(travelerProfiles)).append("\n");
    sb.append("    isRealtimeLoaded: ").append(toIndentedString(isRealtimeLoaded)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    krakenVersion: ").append(toIndentedString(krakenVersion)).append("\n");
    sb.append("    startProductionDate: ").append(toIndentedString(startProductionDate)).append("\n");
    sb.append("    isOpenService: ").append(toIndentedString(isOpenService)).append("\n");
    sb.append("    nbThreads: ").append(toIndentedString(nbThreads)).append("\n");
    sb.append("    isConnectedToRabbitmq: ").append(toIndentedString(isConnectedToRabbitmq)).append("\n");
    sb.append("    autocomplete: ").append(toIndentedString(autocomplete)).append("\n");
    sb.append("    dataVersion: ").append(toIndentedString(dataVersion)).append("\n");
    sb.append("    lastLoadAt: ").append(toIndentedString(lastLoadAt)).append("\n");
    sb.append("    endProductionDate: ").append(toIndentedString(endProductionDate)).append("\n");
    sb.append("    realtimeProxies: ").append(toIndentedString(realtimeProxies)).append("\n");
    sb.append("    publicationDate: ").append(toIndentedString(publicationDate)).append("\n");
    sb.append("    realtimeContributors: ").append(toIndentedString(realtimeContributors)).append("\n");
    sb.append("    streetNetworks: ").append(toIndentedString(streetNetworks)).append("\n");
    sb.append("    lastLoadStatus: ").append(toIndentedString(lastLoadStatus)).append("\n");
    sb.append("    isOpenData: ").append(toIndentedString(isOpenData)).append("\n");
    sb.append("    lastRtDataLoaded: ").append(toIndentedString(lastRtDataLoaded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
  public void writeToParcel(Parcel out, int flags) {
     
    out.writeValue(status);

    out.writeValue(datasetCreatedAt);

    out.writeValue(travelerProfiles);

    out.writeValue(isRealtimeLoaded);

    out.writeValue(parameters);

    out.writeValue(krakenVersion);

    out.writeValue(startProductionDate);

    out.writeValue(isOpenService);

    out.writeValue(nbThreads);

    out.writeValue(isConnectedToRabbitmq);

    out.writeValue(autocomplete);

    out.writeValue(dataVersion);

    out.writeValue(lastLoadAt);

    out.writeValue(endProductionDate);

    out.writeValue(realtimeProxies);

    out.writeValue(publicationDate);

    out.writeValue(realtimeContributors);

    out.writeValue(streetNetworks);

    out.writeValue(lastLoadStatus);

    out.writeValue(isOpenData);

    out.writeValue(lastRtDataLoaded);
  }

  public Status() {
    super();
  }

  Status(Parcel in) {
    
    status = (String)in.readValue(null);
    datasetCreatedAt = (String)in.readValue(null);
    travelerProfiles = (List<TravelerProfiles>)in.readValue(TravelerProfiles.class.getClassLoader());
    isRealtimeLoaded = (Boolean)in.readValue(null);
    parameters = (Parameters)in.readValue(Parameters.class.getClassLoader());
    krakenVersion = (String)in.readValue(null);
    startProductionDate = (String)in.readValue(null);
    isOpenService = (Boolean)in.readValue(null);
    nbThreads = (Integer)in.readValue(null);
    isConnectedToRabbitmq = (Boolean)in.readValue(null);
    autocomplete = (Autocomplete)in.readValue(Autocomplete.class.getClassLoader());
    dataVersion = (Integer)in.readValue(null);
    lastLoadAt = (String)in.readValue(null);
    endProductionDate = (String)in.readValue(null);
    realtimeProxies = (List<String>)in.readValue(null);
    publicationDate = (String)in.readValue(null);
    realtimeContributors = (List<String>)in.readValue(null);
    streetNetworks = (List<StreetNetwork>)in.readValue(StreetNetwork.class.getClassLoader());
    lastLoadStatus = (Boolean)in.readValue(null);
    isOpenData = (Boolean)in.readValue(null);
    lastRtDataLoaded = (String)in.readValue(null);
  }
  
  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<Status> CREATOR = new Parcelable.Creator<Status>() {
    public Status createFromParcel(Parcel in) {
      return new Status(in);
    }
    public Status[] newArray(int size) {
      return new Status[size];
    }
  };
}

